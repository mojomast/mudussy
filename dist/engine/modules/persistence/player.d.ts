import { BaseEntity } from '../../core/entity';
import { IPlayer, IPlayerSaveData, IItemInstance, IQuestProgress } from './types';
export declare class Player extends BaseEntity implements IPlayer {
    readonly type: "player";
    username: string;
    sessionId: string;
    stats: Record<string, any>;
    inventory: IItemInstance[];
    equipment: Record<string, string>;
    currentRoomId: string;
    flags: string[];
    quests: IQuestProgress[];
    skills: Record<string, number>;
    currency: Record<string, number>;
    factionRelations: Record<string, number>;
    lastLogin: Date;
    playTime: number;
    constructor(username: string, sessionId: string, initialRoomId?: string);
    addItem(itemId: string, quantity?: number): boolean;
    removeItem(itemId: string, quantity?: number): boolean;
    hasItem(itemId: string, quantity?: number): boolean;
    getItemQuantity(itemId: string): number;
    setStat(statName: string, value: any): void;
    getStat(statName: string): any;
    hasFlag(flag: string): boolean;
    addFlag(flag: string): void;
    removeFlag(flag: string): void;
    updateQuestProgress(questId: string, objective: string, completed: boolean): void;
    getQuestProgress(questId: string): IQuestProgress | undefined;
    addSkill(skillName: string, level: number): void;
    getSkillLevel(skillName: string): number;
    addCurrency(currencyType: string, amount: number): void;
    getCurrency(currencyType: string): number;
    setFactionRelation(factionName: string, relation: number): void;
    getFactionRelation(factionName: string): number;
    moveToRoom(roomId: string): boolean;
    getCurrentRoom(): string;
    updatePlayTime(additionalTime: number): void;
    toSaveData(): IPlayerSaveData;
    static fromSaveData(saveData: IPlayerSaveData): Player;
    toJSON(): object;
}
