import { Command } from 'commander';
interface AdminCommandOptions {
    verbose?: boolean;
    quiet?: boolean;
    config?: string;
    projectRoot?: string;
}
export declare class AdminCommands {
    private options;
    private usersFile;
    private rolesFile;
    private tokensFile;
    constructor(options: AdminCommandOptions);
    getUserCommand(): Command;
    getRoleCommand(): Command;
    getAuthCommand(): Command;
    getMonitorCommand(): Command;
    private getUserAddCommand;
    private getUserListCommand;
    private getUserUpdateCommand;
    private getUserDeleteCommand;
    private getUserGrantCommand;
    private getUserRevokeCommand;
    private getRoleAddCommand;
    private getRoleListCommand;
    private getRoleUpdateCommand;
    private getRoleDeleteCommand;
    private getAuthLoginCommand;
    private getAuthLogoutCommand;
    private getAuthTokenCommand;
    private getAuthValidateCommand;
    private getTokenGenerateCommand;
    private getTokenListCommand;
    private getTokenRevokeCommand;
    private addUser;
    private listUsers;
    private updateUser;
    private deleteUser;
    private grantRole;
    private revokeRole;
    private addRole;
    private listRoles;
    private updateRole;
    private deleteRole;
    private login;
    private logout;
    private generateToken;
    private listTokens;
    private revokeToken;
    private validateToken;
    private monitorSystem;
    private hashPassword;
    private loadUsers;
    private saveUsers;
    private loadRoles;
    private saveRoles;
    private loadTokens;
    private saveTokens;
}
export {};
